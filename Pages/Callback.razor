@page "/callback"  
@inject IToastService Toast  
@inject HttpClient Http  
@inject NavigationManager Navigation  
@inject Blazored.LocalStorage.ILocalStorageService LocalStore  

@code{
    private string Token { get; set; } = string.Empty;
    private SpotifyUser User { get; set; } = new();

    protected override async Task OnInitializedAsync()  
    {  
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);  
        var query = uri.ToString().Split("#").LastOrDefault();  
        if (QueryHelpers.ParseQuery(query).TryGetValue("access_token", out var token))  
        {  
            Token = token!;  
            await LocalStore.SetItemAsync(Constants.SpotifyTokenKey, token.FirstOrDefault());  
            await GetUser();  
            Navigation.NavigateTo("/creator");  
        }  
        else  
        {  
            Toast.ShowError("Something went wrong. Try to connect Spotify again.");  
            Navigation.NavigateTo("/");  
        }  
    }  

    private async Task GetUser()  
    {  
        Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);  
        var result = await Http.GetStringAsync($"https://api.spotify.com/v1/me");  
        User = JsonSerializer.Deserialize<SpotifyUser>(result)!;  
        await LocalStore.SetItemAsync("SpotifyUser", User);  
    }  
}
